version: '3.9'
services:
  qdrant:
    image: qdrant/qdrant:v1.9.0
    restart: unless-stopped
    volumes:
      - qdrant-data:/qdrant/storage
    ports:
      - '6333:6333'
  ollama:
    image: ollama/ollama:0.1.29
    runtime: nvidia
    environment:
      - OLLAMA_KEEP_ALIVE=300
    volumes:
      - ollama-data:/root/.ollama
    ports:
      - '11434:11434'
  asr-gateway:
    build:
      context: .
      dockerfile: services/asr-gateway/Dockerfile
    environment:
      - PORT=7001
      - FWHISPER_PATH=${FWHISPER_PATH}
      - PYANNOTE_DIARIZATION_PATH=${PYANNOTE_DIARIZATION_PATH}
      - ALLOW_CLOUD=${ALLOW_CLOUD:-false}
    ports:
      - '7001:7001'
    depends_on:
      - ollama
  retrieval:
    build:
      context: .
      dockerfile: services/retrieval/Dockerfile
    environment:
      - PORT=7002
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=${QDRANT_COLLECTION}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - ALLOW_GPU=${ALLOW_GPU:-true}
    ports:
      - '7002:7002'
    depends_on:
      - qdrant
  orchestrator:
    build:
      context: .
      dockerfile: services/orchestrator/Dockerfile
    environment:
      - PORT=7003
      - RETRIEVAL_URL=http://retrieval:7002
      - ASR_URL=http://asr-gateway:7001
      - OLLAMA_URL=http://ollama:11434
      - PRIMARY_MODEL=${PRIMARY_MODEL}
      - FALLBACK_MODEL=${FALLBACK_MODEL}
    ports:
      - '7003:7003'
    depends_on:
      - retrieval
      - asr-gateway
  overlay:
    build:
      context: .
      dockerfile: services/overlay/Dockerfile
    environment:
      - VITE_ORCHESTRATOR_URL=http://orchestrator:7003
    depends_on:
      - orchestrator
  prometheus:
    image: prom/prometheus:v2.50.0
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '${PROMETHEUS_PORT:-9090}:9090'
    depends_on:
      - orchestrator
      - asr-gateway
      - retrieval
  grafana:
    image: grafana/grafana:10.4.2
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - '${GRAFANA_PORT:-3000}:3000'
    depends_on:
      - prometheus
volumes:
  qdrant-data:
  ollama-data:
