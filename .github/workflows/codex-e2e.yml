name: Codex E2E
on:
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest

    # ---- Put ALL variables here; no expressions needed later ----
    env:
      GIT_AUTHOR_NAME: "codex-bot"
      GIT_AUTHOR_EMAIL: "codex-bot@example.com"
      PROJECT_NAME: "client01saas"          # ← edit this only
      BRIEF_PATH: "docs/briefs/client01saas/brief.md"  # ← and this
      VARIANT_N: "3"
      PERF_ENDPOINT: "http://localhost:3000/healthz"
      PERF_OUTPUT: "metrics/input_perf.txt"
      NON_INTERACTIVE: "1"
      YES: "1"
      # secrets stay referenced with ${{ }} (this is correct)
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout using GH_TOKEN
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Configure Git author
        run: |
          git config user.name  "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"

      - name: Install base toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            curl wget git unzip zip tar jq ca-certificates gnupg lsb-release \
            build-essential pkg-config make openssl python3 python3-venv python3-pip \
            software-properties-common git-lfs locales tzdata
          # k6
          curl -s https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/k6-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update && sudo apt-get install -y k6
          # Node 18 + managers
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          corepack enable
          corepack prepare pnpm@latest --activate
          npm i -g yarn npm@latest
          # Python deps
          python3 -m pip install --upgrade pip
          pip install pip-audit pytest pytest-cov locust requests pyyaml tomli

      - name: Make scripts executable
        run: |
          chmod +x workflow/variant_controller.sh
          chmod +x workflow/perf_smoke.sh

      - name: Run Doctor
        run: python3 workflow/doctor.py --strict

      - name: Run Best-of-N E2E
        run: bash workflow/variant_controller.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: submission-pack
          path: |
            dist/**
            evidence/**
            metrics/**
            build_logs/**
